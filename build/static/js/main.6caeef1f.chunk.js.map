{"version":3,"sources":["serviceWorker.js","App/main.js"],"names":["Boolean","window","location","hostname","match","ProgressBar","require","$","document","ready","console","log","Line","strokeWidth","easing","duration","color","trailColor","trailWidth","svgStyle","width","height","animate","currYear","Date","getFullYear","i","option","append","createYearOptions","initForm","EN_PAGE_STATUS","status","pageJson","pageNumber","resolveEnPagePetitionStatus","hide","show","init","click","e","preventDefault","submit","end","validator","addMethod","value","element","this","optional","test","phoneReg1","RegExp","phoneReg2","phoneReg3","phoneReg4","phoneReg5","val","addClassRules","email","validate","errorPlacement","error","parents","after","submitHandler","form","prop","invalidHandler","event","errors","numberOfInvalids","navigator","serviceWorker","then","registration","unregister"],"mappings":"+NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,SCjBAC,EAAcC,EAAQ,GACrBC,EAAKN,OAALM,EAEPA,EAAEC,UAAUC,OAAM,WACdC,QAAQC,IAAK,UAQH,IAAIN,EAAYO,KAAK,gBAAiB,CAC5CC,YAAa,EACbC,OAAQ,YACRC,SAAU,KACVC,MAAO,UACPC,WAAY,OACZC,WAAY,EACZC,SAAU,CAACC,MAAO,OAAQC,OAAQ,UAElCC,QAAQ,IAGhB,WAEI,IADA,IAAIC,GAAW,IAAIC,MAAOC,cACjBC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIC,EAAM,+BAA2BJ,EAASG,EAApC,aAA0CH,EAASG,EAAnD,aAEVnB,EAAE,6BAA6BqB,OAAOD,GACtCpB,EAAE,qCAAqCqB,OAAOD,IAxBlDE,GACAC,IA8HJ,WAEI,IAAMC,EArG0B,WACnC,IAAIC,EAAS,QAGZA,EADkC,IAA/B/B,OAAOgC,SAASC,WACV,OAEA,QAGV,OAAOF,EA4FmBG,GAEL,UAAjBJ,EAEGxB,EAAE,WAAW6B,OAEQ,SAAjBL,IAEJxB,EAAE,WAAW6B,OACb7B,EAAE,WAAW8B,OACb9B,EAAE,WAAW6B,OACb7B,EAAE,SAAS8B,QA1IfC,MA0BJ,IAYMR,EAAW,WACbpB,QAAQC,IAAI,aAEZJ,EAAE,uBAAuBgC,OAAM,SAASC,GACpCA,EAAEC,iBACFlC,EAAE,cAAcmC,SAChBhC,QAAQC,IAAI,2BACbgC,MAEHpC,EAAEqC,UAAUC,UACR,SACA,SAASC,EAAOC,GACZ,OAAOC,KAAKC,SAASF,IAAY,yIAAyIG,KAAKJ,KAEnL,kCAGJvC,EAAEqC,UAAUC,UACR,gBACA,SAAUC,EAAOC,GAEb,IAAMI,EAAY,IAAIC,OAAO,qBAAqBF,KAAKJ,GACjDO,EAAY,IAAID,OAAO,oBAAoBF,KAAKJ,GAChDQ,EAAY,IAAIF,OAAO,wBAAwBF,KAAKJ,GACpDS,EAAY,IAAIH,OAAO,wBAAwBF,KAAKJ,GACpDU,EAAY,IAAIJ,OAAO,yBAAyBF,KAAKJ,GAS3D,OAAIvC,EAAE,yBAAyBkD,MACnBN,GAAaE,GAAaC,GAAaC,GAAaC,GAEhE9C,QAAQC,IAAI,kBACL,KAEX,sHAEJJ,EAAEqC,UAAUc,cAAc,CACtB,MAAS,CAACC,OAAO,GACjB,eAAiB,CAAE,gBAAiB,KAGxCpD,EAAE,cAAcqD,SAAS,CACrBC,eAAgB,SAASC,EAAOf,GAC5BrC,QAAQC,IAAImD,GACZf,EAAQgB,QAAQ,wBAAwBC,MAAOF,IAEnDG,cAAe,SAASC,GAEpB3D,EAAE,kCAAkCkD,IAAIlD,EAAE,gBAAgBkD,OAC1DlD,EAAE,iCAAiCkD,IAAIlD,EAAE,oBAAoBkD,OAC7DlD,EAAE,qCAAqCkD,IAAIlD,EAAE,iBAAiBkD,OAEzDlD,EAAE,iBAAiB4D,KAAK,aAAgB5D,EAAE,iBAAiBkD,MAG5DlD,EAAE,oCAAoCkD,IAAIlD,EAAE,iBAAiBkD,OAF7DlD,EAAE,oCAAoCkD,IAAI,cAI9ClD,EAAE,qCAAqCkD,IAAIlD,EAAE,uBAAuBkD,OAEpE/C,QAAQC,IAAI,mBAIhByD,eAAgB,SAASC,EAAOzB,GAE5B,IAAI0B,EAAS1B,EAAU2B,mBACvB,GAAID,EAAQ,CACR5D,QAAQC,IAAI2D,GAIZ/D,EAAE,aAAa8B,YAEf9B,EAAE,aAAa6B,WDKzB,kBAAmBoC,WACrBA,UAAUC,cAAchE,MAAMiE,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.6caeef1f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.scss'\nconst ProgressBar = require('progressbar.js')\nconst {$} = window\n\n$(document).ready(function() {\n    console.log( \"ready!\" );\n    initProgressBar();\n    createYearOptions()\n    initForm();\n    init();\n});\n\nfunction initProgressBar() {\n    let bar = new ProgressBar.Line('#progress-bar', {\n        strokeWidth: 3,\n        easing: 'easeInOut',\n        duration: 1400,\n        color: '#FFEA82',\n        trailColor: '#eee',\n        trailWidth: 1,\n        svgStyle: {width: '100%', height: '100%'}\n    });\n    bar.animate(0.6);\n}\n\nfunction createYearOptions() {\n    let currYear = new Date().getFullYear()\n    for (var i = 0; i < 80; i++) {\n        let option = `<option value=\"01/01/${currYear-i}\">${currYear-i}</option>`\n\n        $(\"#fake_supporter_birthYear\").append(option);\n        $('#en__field_supporter_NOT_TAGGED_6').append(option);\n    }\n}\n\nconst resolveEnPagePetitionStatus = () => {\n\tlet status = \"FRESH\";\n\t// console.log(window);\n\tif (window.pageJson.pageNumber === 2) {\n\t\tstatus = \"SUCC\"; // succ page\n\t} else {\n\t\tstatus = \"FRESH\"; // start page\n\t}\n\n\treturn status;\n};\n\nconst initForm = () => {\n    console.log('init form')\n\n    $('#center_sign-submit').click(function(e){\n        e.preventDefault();\n        $(\"#fake-form\").submit();\n        console.log(\"fake-form submitting\")\n    }).end()\n\n    $.validator.addMethod( //override email with django email validator regex - fringe cases: \"user@admin.state.in..us\" or \"name@website.a\"\n        'email',\n        function(value, element){\n            return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/i.test(value);\n        },\n        'Email 格式錯誤'\n    );\n\n    $.validator.addMethod(\n        \"taiwan-phone\",\n        function (value, element) {\n            \n            const phoneReg1 = new RegExp(/0\\d{1,2}-\\d{6,8}$/).test(value);\n            const phoneReg2 = new RegExp(/0\\d{1,2}\\d{6,8}$/).test(value);\n            const phoneReg3 = new RegExp(/((?=(09))[0-9]{10})$/).test(value);\n            const phoneReg4 = new RegExp(/(886\\d{1,2}\\d{6,8})$/).test(value);\n            const phoneReg5 = new RegExp(/(886\\d{1,2}-\\d{7,9})$/).test(value);\n            \n            // console.log(value)\n            // console.log(phoneReg1)\n            // console.log(phoneReg2)\n            // console.log(phoneReg3)\n            // console.log(phoneReg4)\n            // console.log(phoneReg5)\n\n            if ($('#fake_supporter_phone').val()) {\n                return (phoneReg1 || phoneReg2 || phoneReg3 || phoneReg4 || phoneReg5)\n            }\n            console.log('phone testing')\n            return true\n        },\n        \"電話格式不正確，請只輸入數字 0912345678 和 02-23612351\")\n\n    $.validator.addClassRules({ // connect it to a css class\n        \"email\": {email: true},\n        \"taiwan-phone\" : { \"taiwan-phone\" : true }\n    });\n\n    $(\"#fake-form\").validate({\n        errorPlacement: function(error, element) {\n            console.log(error)\n            element.parents(\"div.form-field:first\").after( error );\n        },\n        submitHandler: function(form) {\n            \n            $('#en__field_supporter_firstName').val($('#center_name').val());\n            $('#en__field_supporter_lastName').val($('#center_lastname').val());\n            $('#en__field_supporter_emailAddress').val($('#center_email').val());\n    \n            if (!$('#center_phone').prop('required') && !$('#center_phone').val()) {\n                $('#en__field_supporter_phoneNumber').val('0900000000');\n            } else {\n                $('#en__field_supporter_phoneNumber').val($('#center_phone').val());\n            }\n            $('#en__field_supporter_NOT_TAGGED_6').val($('#center_yearofbirth').val());\n            \n            console.log('en form submit')\n            \n            // $(\"form.en__component--page\").submit();\n        },\n        invalidHandler: function(event, validator) {\n            // 'this' refers to the form\n            var errors = validator.numberOfInvalids();\n            if (errors) {\n                console.log(errors)\n                var message = errors == 1\n                    ? 'You missed 1 field. It has been highlighted'\n                    : 'You missed ' + errors + ' fields. They have been highlighted';\n                $(\"div.error\").show();\n            } else {\n                $(\"div.error\").hide();\n            }\n        }\n    });\n}\n\n\n\nfunction init () {\n    \n    const EN_PAGE_STATUS = resolveEnPagePetitionStatus()\n\t// console.log(\"EN_PAGE_STATUS\", EN_PAGE_STATUS)\n\tif (EN_PAGE_STATUS===\"FRESH\") {\n    \n        $(\".page-2\").hide();\n\n\t} else if (EN_PAGE_STATUS===\"SUCC\") {\n        \n        $('.page-1').hide();\n        $('.page-2').show();\n        $(\"section\").hide();\n        $(\"#home\").show();\n\t}\n}"],"sourceRoot":""}